name: TestCode
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    paths:
      - 'pyproject.toml'
      - '**.py'
      - '.github/workflows/runtests.yml'

env:
  # used to manually trigger cache reset. Just increment if needed.
  CACHE_NUMBER: 1

# Cancel previous runs when this one starts.
concurrency:
  group: TestCode-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:

  # Runs the tests on combinations of the supported python/os matrix.
  test_code:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']


    # only run if CI isn't turned off
    if: github.event_name == 'push' || !contains(github.event.pull_request.labels.*.name, 'no_ci')

    env:
      # set path of test environment for caching
      prefix: ${{ startsWith(matrix.os, 'ubuntu') && '/usr/share/miniconda3/envs/dascore'
        || startsWith(matrix.os, 'macos') && '/Users/runner/miniconda3/envs/dascore'
        || startsWith(matrix.os, 'windows') && 'C:\Miniconda3\envs\dascore' }}
      # set individual cache key (only the start of it)
      cache_key: ${{ matrix.os }}-py${{ matrix.python-version }}
      # set conda environment file with dependencies

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # need this so tags are pulled and versions work

      - name: Install obsplus
        uses: ./.github/actions/install-obsplus
        with:
          python-version: ${{ matrix.python-version }}

      # Runs test suite and calculates coverage
      - name: run test suite
        shell: bash -l {0}
        run: |
          pytest -s --cov obsplus --cov-append --cov-report=xml

      # Runs examples in docstrings
      - name: test docstrings
        shell: bash -l {0}
        run: |
          pytest src --doctest-modules

      # Runs the documentation notebooks
      - name: test notebook docs
        shell: bash -l {0}
        run: |
          pytest docs --nbval

      # upload coverage
      - name: upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: PR_tests
          fail_ci_if_error: false



# This is a very useful step for debugging, it allows you to ssh into the CI
# machine (https://github.com/marketplace/actions/debugging-with-tmate).
#
#- name: Setup tmate session
#  uses: mxschmitt/action-tmate@v3
