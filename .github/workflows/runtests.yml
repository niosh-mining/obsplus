name: validate
on: [push]


jobs:
  env:
    conda-env: test_env

  download_test_data:
    runs-on: ubuntu-latest
    steps:
      - name: Download data
        run: |
          git clone https://github.com/d-chambers/opsdata_test
          mv opsdata_test ~/opsdata

  lint_code:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update_conda: true
          python-version: 3.7
          conda-channels: anaconda

      - name: install linting packages
        run: pip install -r tests/requirements.txt

      - name: flake8
        run: flake8 .

  test_code:
    needs: download_test_data
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v1

      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
         update_conda: true
         python-version: ${{ matrix.python-version }}
         conda-channels: anaconda, conda-forge

      - name: install packages
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda create -n ${{ env.test_env }} python=%{{ matrix.python_version }}
          conda activate ${{ env.test_env }}
          conda install numpy pytest obspy pandas pytables
          pip install -e .[dev]

      - name: print package info
        run: |
          conda activate ${{ env.test_env }}
          conda info -a
          conda list

      - name: run test suite
        run: |
          conda activate ${{ env.test_env }}
          pytest --cov obsplus

      - name: test docstrings
        run: |
          conda activate ${{ env.test_env }}
          pytest obsplus --doctest-modules

      - name: test notebook docs
        run: |
          conda activate ${{ env.test_env }}
          pytest docs --nbval
